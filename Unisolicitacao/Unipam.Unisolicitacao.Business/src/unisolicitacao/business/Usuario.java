package unisolicitacao.business;

// Generated 29/04/2014 16:22:41 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "Usuario", schema = "dbo", catalog = "Unisolicitacao")
public class Usuario implements java.io.Serializable {

	private Integer idUsuario;
	private String nome;
	private Set<Atendimento> atendimentos = new HashSet<Atendimento>(0);
	private Set<Solicitacao> solicitacaos = new HashSet<Solicitacao>(0);
	private Set<Encaminhamento> encaminhamentos = new HashSet<Encaminhamento>(0);
	private Set<Setor> setors = new HashSet<Setor>(0);

	public Usuario() {
	}

	public Usuario(Integer idUsuario, String nome) {
		this.idUsuario = idUsuario;
		this.nome = nome;
	}

	public Usuario(Integer idUsuario, String nome, Set<Atendimento> atendimentos,
			Set<Solicitacao> solicitacaos, Set<Encaminhamento> encaminhamentos,
			Set<Setor> setors) {
		this.idUsuario = idUsuario;
		this.nome = nome;
		this.atendimentos = atendimentos;
		this.solicitacaos = solicitacaos;
		this.encaminhamentos = encaminhamentos;
		this.setors = setors;
	}

	@Id
	@Column(name = "IdUsuario", unique = true, nullable = false)
	public Integer getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(Integer idUsuario) {
		this.idUsuario = idUsuario;
	}

	@Column(name = "Nome", nullable = false)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Atendimento> getAtendimentos() {
		return this.atendimentos;
	}

	public void setAtendimentos(Set<Atendimento> atendimentos) {
		this.atendimentos = atendimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Solicitacao> getSolicitacaos() {
		return this.solicitacaos;
	}

	public void setSolicitacaos(Set<Solicitacao> solicitacaos) {
		this.solicitacaos = solicitacaos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usuario")
	public Set<Encaminhamento> getEncaminhamentos() {
		return this.encaminhamentos;
	}

	public void setEncaminhamentos(Set<Encaminhamento> encaminhamentos) {
		this.encaminhamentos = encaminhamentos;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "UsuarioSetor", schema = "dbo", catalog = "Unisolicitacao", joinColumns = { @JoinColumn(name = "UsuarioIdUsuario", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "setoridSetor", nullable = false, updatable = false) })
	public Set<Setor> getSetors() {
		return this.setors;
	}

	public void setSetors(Set<Setor> setors) {
		this.setors = setors;
	}

}
