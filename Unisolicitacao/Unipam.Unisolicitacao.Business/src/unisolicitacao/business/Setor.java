package unisolicitacao.business;

// Generated 29/04/2014 16:22:41 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Setor generated by hbm2java
 */
@Entity
@Table(name = "setor", schema = "dbo", catalog = "Unisolicitacao")
public class Setor implements java.io.Serializable {

	private Integer idSetor;
	private String nomeSetor;
	private Set<Solicitacao> solicitacaosForIdSetorDestino = new HashSet<Solicitacao>(
			0);
	private Set<Encaminhamento> encaminhamentos = new HashSet<Encaminhamento>(0);
	private Set<Usuario> usuarios = new HashSet<Usuario>(0);
	private Set<Solicitacao> solicitacaosForIdSetorOrigem = new HashSet<Solicitacao>(
			0);

	public Setor() {
	}

	public Setor(Integer idSetor, String nomeSetor) {
		this.idSetor = idSetor;
		this.nomeSetor = nomeSetor;
	}

	public Setor(Integer idSetor, String nomeSetor,
			Set<Solicitacao> solicitacaosForIdSetorDestino,
			Set<Encaminhamento> encaminhamentos, Set<Usuario> usuarios,
			Set<Solicitacao> solicitacaosForIdSetorOrigem) {
		this.idSetor = idSetor;
		this.nomeSetor = nomeSetor;
		this.solicitacaosForIdSetorDestino = solicitacaosForIdSetorDestino;
		this.encaminhamentos = encaminhamentos;
		this.usuarios = usuarios;
		this.solicitacaosForIdSetorOrigem = solicitacaosForIdSetorOrigem;
	}

	@Id
	@Column(name = "idSetor", unique = true, nullable = false)
	public Integer getIdSetor() {
		return this.idSetor;
	}

	public void setIdSetor(Integer idSetor) {
		this.idSetor = idSetor;
	}

	@Column(name = "NomeSetor", nullable = false, length = 100)
	public String getNomeSetor() {
		return this.nomeSetor;
	}

	public void setNomeSetor(String nomeSetor) {
		this.nomeSetor = nomeSetor;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "setorByIdSetorDestino")
	public Set<Solicitacao> getSolicitacaosForIdSetorDestino() {
		return this.solicitacaosForIdSetorDestino;
	}

	public void setSolicitacaosForIdSetorDestino(
			Set<Solicitacao> solicitacaosForIdSetorDestino) {
		this.solicitacaosForIdSetorDestino = solicitacaosForIdSetorDestino;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "setor")
	public Set<Encaminhamento> getEncaminhamentos() {
		return this.encaminhamentos;
	}

	public void setEncaminhamentos(Set<Encaminhamento> encaminhamentos) {
		this.encaminhamentos = encaminhamentos;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "UsuarioSetor", schema = "dbo", catalog = "Unisolicitacao", joinColumns = { @JoinColumn(name = "setoridSetor", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "UsuarioIdUsuario", nullable = false, updatable = false) })
	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "setorByIdSetorOrigem")
	public Set<Solicitacao> getSolicitacaosForIdSetorOrigem() {
		return this.solicitacaosForIdSetorOrigem;
	}

	public void setSolicitacaosForIdSetorOrigem(
			Set<Solicitacao> solicitacaosForIdSetorOrigem) {
		this.solicitacaosForIdSetorOrigem = solicitacaosForIdSetorOrigem;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idSetor == null) ? 0 : idSetor.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Setor other = (Setor) obj;
		if (idSetor == null) {
			if (other.idSetor != null)
				return false;
		} else if (!idSetor.equals(other.idSetor))
			return false;
		return true;
	}
	
	

}
