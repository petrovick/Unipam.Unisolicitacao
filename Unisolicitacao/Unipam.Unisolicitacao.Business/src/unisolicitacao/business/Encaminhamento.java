package unisolicitacao.business;

// Generated 29/04/2014 16:22:41 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Encaminhamento generated by hbm2java
 */
@Entity
@Table(name = "Encaminhamento", schema = "dbo", catalog = "Unisolicitacao")
public class Encaminhamento implements java.io.Serializable {

	private Integer idEncaminhamento;
	private Atendimento atendimentoByIdAtendimentoReceptor;
	private Atendimento atendimentoByIdAtendimentoEmissor;
	private Setor setor;
	private Usuario usuario;
	private Integer dataEncaminhada;

	public Encaminhamento() {
	}

	public Encaminhamento(Integer idEncaminhamento,
			Atendimento atendimentoByIdAtendimentoReceptor,
			Atendimento atendimentoByIdAtendimentoEmissor, Setor setor,
			Integer dataEncaminhada) {
		this.idEncaminhamento = idEncaminhamento;
		this.atendimentoByIdAtendimentoReceptor = atendimentoByIdAtendimentoReceptor;
		this.atendimentoByIdAtendimentoEmissor = atendimentoByIdAtendimentoEmissor;
		this.setor = setor;
		this.dataEncaminhada = dataEncaminhada;
	}

	public Encaminhamento(Integer idEncaminhamento,
			Atendimento atendimentoByIdAtendimentoReceptor,
			Atendimento atendimentoByIdAtendimentoEmissor, Setor setor,
			Usuario usuario, Integer dataEncaminhada) {
		this.idEncaminhamento = idEncaminhamento;
		this.atendimentoByIdAtendimentoReceptor = atendimentoByIdAtendimentoReceptor;
		this.atendimentoByIdAtendimentoEmissor = atendimentoByIdAtendimentoEmissor;
		this.setor = setor;
		this.usuario = usuario;
		this.dataEncaminhada = dataEncaminhada;
	}

	@Id
	@Column(name = "IdEncaminhamento", unique = true, nullable = false)
	public Integer getIdEncaminhamento() {
		return this.idEncaminhamento;
	}

	public void setIdEncaminhamento(Integer idEncaminhamento) {
		this.idEncaminhamento = idEncaminhamento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idAtendimentoReceptor", nullable = false)
	public Atendimento getAtendimentoByIdAtendimentoReceptor() {
		return this.atendimentoByIdAtendimentoReceptor;
	}

	public void setAtendimentoByIdAtendimentoReceptor(
			Atendimento atendimentoByIdAtendimentoReceptor) {
		this.atendimentoByIdAtendimentoReceptor = atendimentoByIdAtendimentoReceptor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IdAtendimentoEmissor", nullable = false)
	public Atendimento getAtendimentoByIdAtendimentoEmissor() {
		return this.atendimentoByIdAtendimentoEmissor;
	}

	public void setAtendimentoByIdAtendimentoEmissor(
			Atendimento atendimentoByIdAtendimentoEmissor) {
		this.atendimentoByIdAtendimentoEmissor = atendimentoByIdAtendimentoEmissor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idSetor", nullable = false)
	public Setor getSetor() {
		return this.setor;
	}

	public void setSetor(Setor setor) {
		this.setor = setor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IdUsuario")
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Column(name = "DataEncaminhada", nullable = false)
	public Integer getDataEncaminhada() {
		return this.dataEncaminhada;
	}

	public void setDataEncaminhada(Integer dataEncaminhada) {
		this.dataEncaminhada = dataEncaminhada;
	}

}
